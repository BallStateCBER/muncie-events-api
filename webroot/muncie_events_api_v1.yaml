openapi: 3.0.0
servers:
  # Added by API Auto Mocking Plugin
  - description: Muncie Events API
    url: https://api.muncieevents.com/v1
info:
  description: |
    The API for 
    [MuncieEvents.com](https://muncieevents.com).
  version: "1.0.0"
  title: Muncie Events API
  termsOfService: ""
  contact:
    email: gtwatson@bsu.edu
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
tags:
  - name: events
    description: ''
paths:
  /categories:
    get:
      tags:
        - categories
      summary: Get a list of all categories and the number of associated upcoming events
      operationId: getCategories
      responses:
        '200':
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          format: int64
                        attributes:
                          type: object
                          properties:
                            name:
                              type: string
                              example: Music
                            upcomingEventCount:
                              type: integer
                              example: 42
                            url:
                              type: string
                              example: https://muncieevents.com/category/music
        '400':
          description: Bad request
          content:
            application/vnd.api+json:
              schema:
                type: object
                properties:
                  title:
                    type: string
                    example: Invalid protocol
                  detail:
                    type: string
                    example: The API must be used over HTTPS
      security:
        - api_key: []
  /event/{eventId}:
    get:
      tags:
        - events
      summary: Get a specific event by its ID
      operationId: getEvent
      parameters:
        - name: eventId
          in: path
          schema:
            type: integer
            minimum: 1
          required: true
          example: 123
      responses:
        '200':
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Event'
        '400':
          description: Bad request
          content:
            application/vnd.api+json:
              schema:
                oneOf:
                  - type: object
                    properties:
                      errors:
                        type: array
                        items:
                          type: object
                          properties:
                            title:
                              type: string
                              example: Invalid protocol
                            detail:
                              type: string
                              example: The API must be used over HTTPS
                  - type: object
                    properties:
                      errors:
                        type: array
                        items:
                          type: object
                          properties:
                            title:
                              type: string
                              example: Missing event ID
                            detail:
                              type: string
                              example: Event ID is required
                  - type: object
                    properties:
                      errors:
                        type: array
                        items:
                          type: object
                          properties:
                            title:
                              type: string
                              example: Invalid event ID
                            detail:
                              type: string
                              example: Event with ID 123 not found
      security:
        - api_key: []
  /events:
    get:
      tags:
        - events
      summary: Get events on or after the specified date/time, or in a range of dates
      operationId: getEvents
      parameters:
        - name: start
          in: query
          schema:
            type: string
            format: date
          description: 'Return events taking place on and after this date (format: YYYY-MM-DD)'
          required: true
          example: '2017-01-15'
        - name: end
          in: query
          schema:
            type: string
            format: date
          description: 'Return events up to and including this date (format: YYYY-MM-DD)'
          example: '2017-12-31'
        - name: withTags[]
          in: query
          schema:
            type: array
            items:
              type: string
          description: Return events that have any of the specified tags
          example: ['christmas', 'halloween']
      responses:
        '200':
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Event'
                  links:
                    type: object
                    properties:
                      first:
                        type: string
                        description: Path to the first page in this result set
                        example: '/events?on=2099-09-30&page=1'
                      last:
                        type: string
                        description: Path to the last page in this result set
                        example: '/events?on=2099-09-30&page=4'
                      prev:
                        type: string
                        description: Path to the previous page in this result set, or null if not applicable
                        example: '/events?on=2099-09-30&page=1'
                        nullable: true
                      next:
                        type: string
                        description: Path to the next page in this result set, or null if not applicable
                        example: '/events?on=2099-09-30&page=3'
                        nullable: true
        '400':
          description: Bad request
          content:
            application/vnd.api+json:
              schema:
                oneOf:
                  - type: object
                    properties:
                      errors:
                        type: array
                        items:
                          type: object
                          properties:
                            code:
                              type: integer
                              example: 400
                            detail:
                              type: string
                              example: The `start` parameter is required
                  - type: object
                    properties:
                      title:
                        type: string
                        example: Invalid protocol
                      detail:
                        type: string
                        example: The API must be used over HTTPS
      security:
        - api_key: []
  /events/category/{categoryId}:
    get:
      tags:
        - events
      summary: Get upcoming events in the specified category
      operationId: getEventsCategory
      parameters:
        - name: categoryId
          in: path
          schema:
            type: integer
            minimum: 1
          required: true
          description: Category ID
          example: 13
        - name: withTags[]
          in: query
          schema:
            type: array
            items:
              type: string
          description: Return events that have any of the specified tags
          example: ['free concerts', 'watercolor']
      responses:
        '200':
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Event'
                  links:
                    type: object
                    properties:
                      self:
                        type: string
                        description: Path to access this page
                        example: '/events/category/13?page=1'
                      first:
                        type: string
                        description: Path to the first page in this result set
                        example: '/events/category/13?page=1'
                      last:
                        type: string
                        description: Path to the last page in this result set
                        example: '/events/category/13?page=4'
                      prev:
                        type: string
                        description: Path to the previous page in this result set, or null if not applicable
                        example: '/events/category/13?page=1'
                        nullable: true
                      next:
                        type: string
                        description: Path to the next page in this result set, or null if not applicable
                        example: '/events/search?page=3'
                        nullable: true
        '400':
          description: Bad request
          content:
            application/vnd.api+json:
              schema:
                oneOf:
                  - type: object
                    properties:
                      errors:
                        type: array
                        items:
                          type: object
                          properties:
                            code:
                              type: integer
                              example: 400
                            detail:
                              type: string
                              example: Category ID is required
                  - type: object
                    properties:
                      errors:
                        type: array
                        items:
                          type: object
                          properties:
                            code:
                              type: integer
                              example: 400
                            detail:
                              type: string
                              example: 'Category with ID {categoryId} not found'
                  - type: object
                    properties:
                      errors:
                        type: array
                        items:
                          type: object
                          properties:
                            title:
                              type: string
                              example: Invalid protocol
                            detail:
                              type: string
                              example: The API must be used over HTTPS
      security:
        - api_key: []
  /events/future:
    get:
      tags:
        - events
      summary: Get events on or after the current date/time
      description: 'A convenience endpoint equivalent to using /events?start={today}'
      operationId: getEventsFuture
      parameters:
        - name: withTags[]
          in: query
          schema:
            type: array
            items:
              type: string
          description: Return events that have any of the specified tags
          example: ['christmas', 'halloween']
      responses:
        '200':
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Event'
                  links:
                    type: object
                    properties:
                      self:
                        type: string
                        description: Path to access this page
                        example: '/events/future?page=1'
                      first:
                        type: string
                        description: Path to the first page in this result set
                        example: '/events/future?page=1'
                      last:
                        type: string
                        description: Path to the last page in this result set
                        example: '/events/future?page=4'
                      prev:
                        type: string
                        description: Path to the previous page in this result set, or null if not applicable
                        example: '/events/future?page=1'
                        nullable: true
                      next:
                        type: string
                        description: Path to the next page in this result set, or null if not applicable
                        example: '/events/future?page=3'
                        nullable: true
        '400':
          description: Bad request
          content:
            application/vnd.api+json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: object
                      properties:
                        title:
                          type: string
                          example: Invalid protocol
                        detail:
                          type: string
                          example: The API must be used over HTTPS
      security:
        - api_key: []
  /events/search:
    get:
      tags:
        - events
      summary: Get upcoming events whose titles, descriptions, locations, or tags match the provided search term
      operationId: getEventsSearch
      parameters:
        - name: q
          in: query
          schema:
            type: string
          required: true
          description: Search term
          example: music festivals
      responses:
        '200':
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Event'
                  links:
                    type: object
                    properties:
                      self:
                        type: string
                        description: Path to access this page
                        example: '/events/search?page=1'
                      first:
                        type: string
                        description: Path to the first page in this result set
                        example: '/events/search?page=1'
                      last:
                        type: string
                        description: Path to the last page in this result set
                        example: '/events/search?page=4'
                      prev:
                        type: string
                        description: Path to the previous page in this result set, or null if not applicable
                        example: '/events/search?page=1'
                        nullable: true
                      next:
                        type: string
                        description: Path to the next page in this result set, or null if not applicable
                        example: '/events/search?page=3'
                        nullable: true
        '400':
          description: Bad request
          content:
            application/vnd.api+json:
              schema:
                oneOf:
                  - type: object
                    properties:
                      errors:
                        type: array
                        items:
                          type: object
                          properties:
                            code:
                              type: integer
                              example: 400
                            detail:
                              type: string
                              example: The `start` parameter is required
                  - type: object
                    properties:
                      errors:
                        type: array
                        items:
                          type: object
                          properties:
                            title:
                              type: string
                              example: Invalid protocol
                            detail:
                              type: string
                              example: The API must be used over HTTPS
      security:
        - api_key: []
  /pages/about:
    get:
      tags:
        - pages
      summary: 'Get the HTML contents of the "About Muncie Events" page'
      operationId: getPagesAbout
      responses:
        '200':
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Page'
                  links:
                    type: object
                    properties:
                      self:
                        type: string
                        description: Path to access this page
                        example: /pages/about
        '400':
          description: Bad request
          content:
            application/vnd.api+json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: object
                      properties:
                        title:
                          type: string
                          example: Invalid protocol
                        detail:
                          type: string
                          example: The API must be used over HTTPS
      security:
        - api_key: []
  /pages/rules-events:
    get:
      tags:
        - pages
      summary: 'Get the HTML contents of the "Rules for Posting Events" page'
      operationId: getPagesRulesEvents
      responses:
        '200':
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Page'
                  links:
                    type: object
                    properties:
                      self:
                        type: string
                        description: Path to access this page
                        example: '/pages/rules-events'
        '400':
          description: Bad request
          content:
            application/vnd.api+json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: object
                      properties:
                        title:
                          type: string
                          example: Invalid protocol
                        detail:
                          type: string
                          example: The API must be used over HTTPS
      security:
        - api_key: []
  /pages/rules-images:
    get:
      tags:
        - pages
      summary: 'Get the HTML contents of the "Rules for Uploading Images" page'
      operationId: getPagesRulesImages
      responses:
        '200':
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Page'
                  links:
                    type: object
                    properties:
                      self:
                        type: string
                        description: Path to access this page
                        example: '/pages/rules-images'
        '400':
          description: Bad request
          content:
            application/vnd.api+json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: object
                      properties:
                        title:
                          type: string
                          example: Invalid protocol
                        detail:
                          type: string
                          example: The API must be used over HTTPS
      security:
        - api_key: []
  /pages/rules-tags:
    get:
      tags:
        - pages
      summary: 'Get the HTML contents of the "Rules for Creating Tags" page'
      operationId: getPagesRulesTags
      responses:
        '200':
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Page'
                  links:
                    type: object
                    properties:
                      self:
                        type: string
                        description: Path to access this page
                        example: '/pages/rules-tags'
        '400':
          description: Bad request
          content:
            application/vnd.api+json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: object
                      properties:
                        title:
                          type: string
                          example: Invalid protocol
                        detail:
                          type: string
                          example: The API must be used over HTTPS
      security:
        - api_key: []
  /tag/{tagId}:
    get:
      tags:
        - tags
      summary: Returns a tag and all upcoming associated events
      operationId: getTag
      parameters:
        - name: tagId
          in: path
          schema:
            type: integer
            minimum: 1
          required: true
          example: 123
      responses:
        '200':
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        type:
                          type: string
                          example: tags
                        id:
                          type: integer
                          format: int64
                        attributes:
                          type: object
                          properties:
                            name:
                              type: string
                              example: downtown
                            selectable:
                              type: boolean
                              example: true
                        relationships:
                          type: object
                          properties:
                            events:
                              type: object
                              properties:
                                data:
                                  type: array
                                  items:
                                    type: object
                                    properties:
                                      type:
                                        type: string
                                        example: events
                                      id:
                                        type: integer
                                        example: 123
                  included:
                    type: array
                    items:
                      $ref: '#/components/schemas/Event'
        '400':
          description: Bad request
          content:
            application/vnd.api+json:
              schema:
                oneOf:
                  - type: object
                    properties:
                      errors:
                        type: array
                        items:
                          type: object
                          properties:
                            code:
                              type: integer
                              example: 400
                            detail:
                              type: string
                              example: Required tag ID is missing
                  - type: object
                    properties:
                      errors:
                        type: array
                        items:
                          type: object
                          properties:
                            code:
                              type: integer
                              example: 400
                            detail:
                              type: string
                              example: 'Invalid tag ID: {tagId}'
                  - type: object
                    properties:
                      errors:
                        type: array
                        items:
                          type: object
                          properties:
                            title:
                              type: string
                              example: Invalid protocol
                            detail:
                              type: string
                              example: The API must be used over HTTPS
      security:
        - api_key: []
  /tags/future:
    get:
      tags:
        - tags
      summary: Returns a list of tags associated with upcoming events and the counts of upcoming events for each
      operationId: getTagsFuture
      responses:
        '200':
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        type:
                          type: string
                          example: tags
                        id:
                          type: integer
                          format: int64
                        attributes:
                          type: object
                          properties:
                            name:
                              type: string
                              example: downtown
                            selectable:
                              type: boolean
                              example: true
                            upcomingEventCount:
                              type: integer
                              example: 10
        '400':
          description: Bad request
          content:
            application/vnd.api+json:
              schema:
                type: object
                properties:
                  title:
                    type: string
                    example: Invalid protocol
                  detail:
                    type: string
                    example: The API must be used over HTTPS
      security:
        - api_key: []
  /tags/tree:
    get:
      tags:
        - tags
      summary: Returns the entire tree of visible tags
      description: "Note: Root tags are listed under `data`, and child tags are all listed in a flat array under
        `included`. A single, straightforward, multidimensional array of all tags and their descendant tags might be
        intuitive here, but the JSON API specification requires this cumbersome format instead. Sorry about that."
      operationId: getTagsTree
      responses:
        '200':
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        type:
                          type: string
                          example: tags
                        id:
                          type: integer
                          format: int64
                        attributes:
                          type: object
                          properties:
                            name:
                              type: string
                              example: downtown
                            selectable:
                              type: boolean
                              example: true
                        relationships:
                          type: object
                          properties:
                            children:
                              type: object
                              properties:
                                data:
                                  type: array
                                  items:
                                    type: object
                                    properties:
                                      type:
                                        type: string
                                        example: tags
                                      id:
                                        type: integer
                                        example: 123
                  included:
                    type: array
                    items:
                      type: object
                      properties:
                        type:
                          type: string
                          example: tags
                        id:
                          type: integer
                          example: 123
                        attributes:
                          type: object
                          properties:
                            name:
                              type: string
                              example: downtown
                            selectable:
                              type: boolean
                              example: true
                        relationships:
                          type: object
                          properties:
                            children:
                              type: object
                              properties:
                                data:
                                  type: array
                                  items:
                                    type: object
                                    properties:
                                      type:
                                        type: string
                                        example: tags
                                      id:
                                        type: integer
                                        example: 123
        '400':
          description: Bad request
          content:
            application/vnd.api+json:
              schema:
                type: object
                properties:
                  title:
                    type: string
                    example: Invalid protocol
                  detail:
                    type: string
                    example: The API must be used over HTTPS
      security:
        - api_key: []
components:
  schemas:
    Category:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
          example: Music
    User:
      type: object
      nullable: true
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
          example: Alfred E. Neuman
        email:
          type: string
          example: 'alfred@example.com'
    Tag:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
          example: music festivals
    Event:
      type: object
      required:
        - category_id
        - date
        - description
        - location
        - start_time
        - title
      properties:
        type:
          type: string
          example: events
        id:
          type: integer
          format: int64
        attributes:
          type: object
          properties:
            title:
              type: string
              example: Muncie MusicFest 2022
            description:
              type: string
              example: "Muncie's big annual music festival, celebrating the talent of the Muncie music community"
            location:
              type: string
              example: Cornerstone Center for the Arts
            location_details:
              type: string
              example: Third floor ballroom
              nullable: true
            address:
              type: string
              example: 520 E Main Street
              nullable: true
            user:
              $ref: '#/components/schemas/User'
            category:
              $ref: '#/components/schemas/Category'
            series:
              $ref: '#/components/schemas/EventSeries'
            date:
              type: string
              format: date
              example: '2020-02-20'
            time_start:
              type: string
              format: date-time
              example: '2020-02-20T20:30:00-04:00'
              description: 'Datetime in local (Muncie) time'
            time_end:
              type: string
              format: date-time
              example: '2020-02-20T22:00:00-04:00'
              description: 'Datetime in local (Muncie) time'
              nullable: true
            age_restriction:
              type: string
              example: 21+
              nullable: true
            cost:
              type: string
              example: $10, or $5 w/ student ID
              nullable: true
            source:
              type: string
              description: A link or description of the source of this event information
              example: 'http://munciemusicfest.com'
              nullable: true
            tags:
              type: array
              items:
                $ref: '#/components/schemas/Tag'
            images:
              type: array
              items:
                $ref: '#/components/schemas/Image'
            url:
              type: string
              description: The URL for accessing this event outside of the API
        relationships:
          type: object
          properties:
            category:
              type: object
              properties:
                data:
                  type: object
                  properties:
                    type:
                      type: string
                      example: categories
                    id:
                      type: integer
            series:
              type: object
              properties:
                data:
                  type: object
                  nullable: true
                  properties:
                    type:
                      type: string
                      example: series
                    id:
                      type: integer
            tags:
              type: object
              properties:
                data:
                  type: array
                  items:
                    type: object
                    properties:
                      type:
                        type: string
                        example: tags
                      id:
                        type: integer
            user:
              type: object
              properties:
                data:
                  type: object
                  properties:
                    type:
                      type: string
                      example: users
                    id:
                      type: integer
    EventSeries:
      type: object
      nullable: true
      required:
        - title
      properties:
        id:
          type: integer
          format: int64
        title:
          type: string
          example: Muncie MusicFest
    Image:
      type: object
      required:
        - title
      properties:
        tiny_url:
          type: string
          description: The URL of the tiny (50px square) thumbnail of the image
        small_url:
          type: string
          description: The URL of the small (200px wide) thumbnail of the image
        full_url:
          type: string
          description: The URL of the full-sized image
        caption:
          type: string
          example: Event flyer
    Page:
      type: object
      properties:
        type:
          type: string
          example: pages
        id:
          type: string
          example: about
        attributes:
          type: object
          properties:
            title:
              type: string
              example: About Muncie Events
            body:
              type: string
              example: Muncie Events is a comprehensive event promotion tool provided to the city of...
  securitySchemes:
    api_key:
      type: apiKey
      name: apikey
      in: query
